{"version":3,"sources":["Overlay.tsx"],"names":["DEFAULT_ANIMATE_TIME","styles","StyleSheet","create","emptyOverlay","backgroundColor","height","position","width","fullOverlay","bottom","left","right","top","Overlay","React","Component","fadeAnim","Animated","Value","overlayStyle","UNSAFE_componentWillReceiveProps","newProps","visible","setState","timing","state","toValue","duration","useNativeDriver","start","onAnimatedEnd","bind","props","render","opacity","children"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA,MAAMA,oBAAoB,GAAG,GAA7B;;AACA,MAAMC,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,eAAe,EAAE,aADL;AAEZC,IAAAA,MAAM,EAAE,CAFI;AAGZC,IAAAA,QAAQ,EAAE,UAHE;AAIZC,IAAAA,KAAK,EAAE;AAJK,GADiB;AAO/BC,EAAAA,WAAW,EAAE;AACXJ,IAAAA,eAAe,EAAE,aADN;AAEXK,IAAAA,MAAM,EAAE,CAFG;AAGXC,IAAAA,IAAI,EAAE,CAHK;AAIXJ,IAAAA,QAAQ,EAAE,UAJC;AAKXK,IAAAA,KAAK,EAAE,CALI;AAMXC,IAAAA,GAAG,EAAE;AANM;AAPkB,CAAlB,CAAf;;AA0BA,MAAMC,OAAN,SAAsBC,KAAK,CAACC,SAA5B,CAA2D;AAAA;AAAA;;AAAA,mCACjD;AACNC,MAAAA,QAAQ,EAAE,IAAIC,sBAASC,KAAb,CAAmB,CAAnB,CADJ;AAENC,MAAAA,YAAY,EAAEnB,MAAM,CAACG;AAFf,KADiD;AAAA;;AAMzDiB,EAAAA,gCAAgC,CAACC,QAAD,EAAyB;AACvD,QAAIA,QAAQ,CAACC,OAAb,EAAsB;AACpB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,YAAY,EAAEnB,MAAM,CAACQ;AAAvB,OAAd;AACD;;AACD,WAAOS,sBAASO,MAAT,CAAgB,KAAKC,KAAL,CAAWT,QAA3B,EAAqC;AAC1CU,MAAAA,OAAO,EAAEL,QAAQ,CAACC,OAAT,GAAmB,CAAnB,GAAuB,CADU;AAE1CK,MAAAA,QAAQ,EAAE5B,oBAFgC;AAG1C6B,MAAAA,eAAe,EAAE;AAHyB,KAArC,EAIJC,KAJI,CAIE,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAJF,CAAP;AAKD;;AAEDD,EAAAA,aAAa,GAAG;AACd,QAAI,CAAC,KAAKE,KAAL,CAAWV,OAAhB,EAAyB;AACvB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,YAAY,EAAEnB,MAAM,CAACG;AAAvB,OAAd;AACD;AACF;;AAED8B,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,qBAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE,CAAC,KAAKR,KAAL,CAAWN,YAAZ,EAA0B;AAAEe,QAAAA,OAAO,EAAE,KAAKT,KAAL,CAAWT;AAAtB,OAA1B;AAAtB,OACG,KAAKgB,KAAL,CAAWG,QADd,CADF;AAKD;;AA7BwD;;eAgC5CtB,O","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleProp, StyleSheet, ViewStyle } from 'react-native';\n\nconst DEFAULT_ANIMATE_TIME = 300;\nconst styles = StyleSheet.create({\n  emptyOverlay: {\n    backgroundColor: 'transparent',\n    height: 0,\n    position: 'absolute',\n    width: 0,\n  },\n  fullOverlay: {\n    backgroundColor: 'transparent',\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nexport interface OverlayProps {\n  visible: boolean;\n}\n\ninterface State {\n  fadeAnim: Animated.Value;\n  overlayStyle: StyleProp<ViewStyle>;\n}\n\nclass Overlay extends React.Component<OverlayProps, State> {\n  state = {\n    fadeAnim: new Animated.Value(0),\n    overlayStyle: styles.emptyOverlay,\n  };\n\n  UNSAFE_componentWillReceiveProps(newProps: OverlayProps) {\n    if (newProps.visible) {\n      this.setState({ overlayStyle: styles.fullOverlay });\n    }\n    return Animated.timing(this.state.fadeAnim, {\n      toValue: newProps.visible ? 1 : 0,\n      duration: DEFAULT_ANIMATE_TIME,\n      useNativeDriver: false,\n    }).start(this.onAnimatedEnd.bind(this));\n  }\n\n  onAnimatedEnd() {\n    if (!this.props.visible) {\n      this.setState({ overlayStyle: styles.emptyOverlay });\n    }\n  }\n\n  render() {\n    return (\n      <Animated.View style={[this.state.overlayStyle, { opacity: this.state.fadeAnim }]}>\n        {this.props.children}\n      </Animated.View>\n    );\n  }\n}\n\nexport default Overlay;\n"]}