{"version":3,"sources":["Button.tsx"],"names":["React","StyleSheet","Text","TouchableOpacity","Image","Button","buttonStyle","onPress","iconSrc","textStyle","children","styles","button","icon","buttonText","create","backgroundColor","flexDirection","height","padding","color","fontSize","fontWeight","textAlign","textAlignVertical","marginLeft","marginRight","width"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,UADF,EAEEC,IAFF,EAGEC,gBAHF,EAIEC,KAJF,QASO,cATP;;AAmBA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA,OAAxB;AAAiCC,EAAAA,SAAjC;AAA4CC,EAAAA;AAA5C,CAAD,kBACb,oBAAC,gBAAD;AAAkB,EAAA,aAAa,EAAE,GAAjC;AAAsC,EAAA,KAAK,EAAE,CAACC,MAAM,CAACC,MAAR,EAAgBN,WAAhB,CAA7C;AAA2E,EAAA,OAAO,EAAEC;AAApF,gBACE,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAEI,MAAM,CAACE,IAArB;AAA2B,EAAA,MAAM,EAAEL;AAAnC,EADF,eAEE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE,CAACG,MAAM,CAACG,UAAR,EAAoBL,SAApB;AAAb,GAA8CC,QAA9C,CAFF,CADF;;AAOA,eAAeL,MAAf;AAEA,MAAMM,MAAM,GAAGV,UAAU,CAACc,MAAX,CAAkB;AAC/BH,EAAAA,MAAM,EAAE;AACNI,IAAAA,eAAe,EAAE,OADX;AAENC,IAAAA,aAAa,EAAE,KAFT;AAGNC,IAAAA,MAAM,EAAE,EAHF;AAINC,IAAAA,OAAO,EAAE;AAJH,GADuB;AAO/BL,EAAAA,UAAU,EAAE;AACVM,IAAAA,KAAK,EAAE,SADG;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,UAAU,EAAE,MAHF;AAIVC,IAAAA,SAAS,EAAE,MAJD;AAKVC,IAAAA,iBAAiB,EAAE;AALT,GAPmB;AAc/BX,EAAAA,IAAI,EAAE;AACJK,IAAAA,MAAM,EAAE,EADJ;AAEJO,IAAAA,UAAU,EAAE,EAFR;AAGJC,IAAAA,WAAW,EAAE,EAHT;AAIJC,IAAAA,KAAK,EAAE;AAJH;AAdyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  Image,\n  ImageSourcePropType,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nexport interface ButtonProps {\n  onPress: () => void;\n  iconSrc: ImageSourcePropType;\n  buttonStyle?: StyleProp<ViewStyle>;\n  textStyle?: StyleProp<TextStyle>;\n  children: React.ReactNode;\n}\n\nconst Button = ({ buttonStyle, onPress, iconSrc, textStyle, children }: ButtonProps) => (\n  <TouchableOpacity activeOpacity={0.5} style={[styles.button, buttonStyle]} onPress={onPress}>\n    <Image style={styles.icon} source={iconSrc} />\n    <Text style={[styles.buttonText, textStyle]}>{children}</Text>\n  </TouchableOpacity>\n);\n\nexport default Button;\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: 'white',\n    flexDirection: 'row',\n    height: 50,\n    padding: 10,\n  },\n  buttonText: {\n    color: '#2c2c2c',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    textAlignVertical: 'center',\n  },\n  icon: {\n    height: 28,\n    marginLeft: 10,\n    marginRight: 30,\n    width: 28,\n  },\n});\n"]}