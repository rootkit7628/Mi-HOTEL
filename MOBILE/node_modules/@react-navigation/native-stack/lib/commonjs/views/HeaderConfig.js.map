{"version":3,"sources":["HeaderConfig.tsx"],"names":["HeaderConfig","headerBackImageSource","headerBackButtonMenuEnabled","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerBackVisible","headerShadowVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerLeft","headerRight","headerShown","headerStyle","headerBlurEffect","headerTintColor","headerTitle","headerTitleAlign","headerTitleStyle","headerTransparent","headerSearchBarOptions","route","title","canGoBack","insets","colors","tintColor","Platform","OS","primary","text","headerBackTitleStyleFlattened","StyleSheet","flatten","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","fontFamily","titleText","undefined","name","titleColor","color","titleFontSize","fontSize","titleFontWeight","fontWeight","headerTitleStyleSupported","headerLeftElement","label","headerRightElement","headerTitleElement","children","SearchBar","Error","backButtonInCustomView","backgroundColor","card","I18nManager","isRTL","top","styles","row","create","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import { HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n} from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n  canGoBack: boolean;\n};\n\nexport default function HeaderConfig({\n  headerBackImageSource,\n  headerBackButtonMenuEnabled,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  headerSearchBarOptions,\n  route,\n  title,\n  canGoBack,\n}: Props): JSX.Element {\n  const insets = useSafeAreaInsets();\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor ?? (Platform.OS === 'ios' ? colors.primary : colors.text);\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = title !== undefined ? title : route.name;\n  const titleColor =\n    headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text;\n  const titleFontSize = headerTitleStyleFlattened.fontSize;\n  const titleFontWeight = headerTitleStyleFlattened.fontWeight;\n\n  const headerTitleStyleSupported: TextStyle = { color: titleColor };\n\n  if (headerTitleStyleFlattened.fontFamily != null) {\n    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;\n  }\n\n  if (titleFontSize != null) {\n    headerTitleStyleSupported.fontSize = titleFontSize;\n  }\n\n  if (titleFontWeight != null) {\n    headerTitleStyleSupported.fontWeight = titleFontWeight;\n  }\n\n  const headerLeftElement = headerLeft?.({\n    tintColor,\n    label: headerBackTitle,\n    canGoBack,\n  });\n  const headerRightElement = headerRight?.({ tintColor });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({ tintColor, children: titleText })\n      : null;\n\n  if (\n    Platform.OS === 'ios' &&\n    headerSearchBarOptions != null &&\n    SearchBar == null\n  ) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyleFlattened.backgroundColor ??\n        (headerTransparent ? 'transparent' : colors.card)\n      }\n      backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n      backTitleFontFamily={backTitleFontFamily}\n      backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n      blurEffect={headerBlurEffect}\n      color={tintColor}\n      direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      disableBackButtonMenu={headerBackButtonMenuEnabled === false}\n      hidden={headerShown === false}\n      hideBackButton={headerBackVisible === false}\n      hideShadow={headerShadowVisible === false}\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n      largeTitleColor={headerLargeTitleStyleFlattened.color}\n      largeTitleFontFamily={largeTitleFontFamily}\n      largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n      largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n      largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n      title={typeof headerTitle === 'string' ? headerTitle : titleText}\n      titleColor={titleColor}\n      titleFontFamily={titleFontFamily}\n      titleFontSize={titleFontSize}\n      titleFontWeight={titleFontWeight}\n      topInsetEnabled={insets.top !== 0}\n      translucent={\n        // This defaults to `true`, so we can't pass `undefined`\n        headerTransparent === true\n      }\n    >\n      {Platform.OS === 'ios' ? (\n        <>\n          {headerLeftElement != null ? (\n            <ScreenStackHeaderLeftView>\n              {headerLeftElement}\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleElement != null ? (\n            <ScreenStackHeaderCenterView>\n              {headerTitleElement}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      ) : (\n        <>\n          {headerLeftElement != null || typeof headerTitle === 'function' ? (\n            <ScreenStackHeaderLeftView>\n              <View style={styles.row}>\n                {headerLeftElement}\n                {headerTitleAlign !== 'center' ? (\n                  typeof headerTitle === 'function' ? (\n                    headerTitleElement\n                  ) : (\n                    <HeaderTitle\n                      tintColor={tintColor}\n                      style={headerTitleStyleSupported}\n                    >\n                      {titleText}\n                    </HeaderTitle>\n                  )\n                ) : null}\n              </View>\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleAlign === 'center' ? (\n            <ScreenStackHeaderCenterView>\n              {typeof headerTitle === 'function' ? (\n                headerTitleElement\n              ) : (\n                <HeaderTitle\n                  tintColor={tintColor}\n                  style={headerTitleStyleSupported}\n                >\n                  {titleText}\n                </HeaderTitle>\n              )}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      )}\n      {headerBackImageSource !== undefined ? (\n        <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n      ) : null}\n      {headerRightElement != null ? (\n        <ScreenStackHeaderRightView>\n          {headerRightElement}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {Platform.OS === 'ios' && headerSearchBarOptions != null ? (\n        <ScreenStackHeaderSearchBarView>\n          <SearchBar {...headerSearchBarOptions} />\n        </ScreenStackHeaderSearchBarView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n"]}