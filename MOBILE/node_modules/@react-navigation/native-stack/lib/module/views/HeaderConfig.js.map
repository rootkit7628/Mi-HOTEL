{"version":3,"sources":["HeaderConfig.tsx"],"names":["HeaderTitle","useTheme","React","I18nManager","Platform","StyleSheet","View","useSafeAreaInsets","ScreenStackHeaderBackButtonImage","ScreenStackHeaderCenterView","ScreenStackHeaderConfig","ScreenStackHeaderLeftView","ScreenStackHeaderRightView","ScreenStackHeaderSearchBarView","SearchBar","processFonts","HeaderConfig","headerBackImageSource","headerBackButtonMenuEnabled","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerBackVisible","headerShadowVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerLeft","headerRight","headerShown","headerStyle","headerBlurEffect","headerTintColor","headerTitle","headerTitleAlign","headerTitleStyle","headerTransparent","headerSearchBarOptions","route","title","canGoBack","insets","colors","tintColor","OS","primary","text","headerBackTitleStyleFlattened","flatten","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","fontFamily","titleText","undefined","name","titleColor","color","titleFontSize","fontSize","titleFontWeight","fontWeight","headerTitleStyleSupported","headerLeftElement","label","headerRightElement","headerTitleElement","children","Error","backButtonInCustomView","backgroundColor","card","isRTL","top","styles","row","create","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import { HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n} from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n  canGoBack: boolean;\n};\n\nexport default function HeaderConfig({\n  headerBackImageSource,\n  headerBackButtonMenuEnabled,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  headerSearchBarOptions,\n  route,\n  title,\n  canGoBack,\n}: Props): JSX.Element {\n  const insets = useSafeAreaInsets();\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor ?? (Platform.OS === 'ios' ? colors.primary : colors.text);\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = title !== undefined ? title : route.name;\n  const titleColor =\n    headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text;\n  const titleFontSize = headerTitleStyleFlattened.fontSize;\n  const titleFontWeight = headerTitleStyleFlattened.fontWeight;\n\n  const headerTitleStyleSupported: TextStyle = { color: titleColor };\n\n  if (headerTitleStyleFlattened.fontFamily != null) {\n    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;\n  }\n\n  if (titleFontSize != null) {\n    headerTitleStyleSupported.fontSize = titleFontSize;\n  }\n\n  if (titleFontWeight != null) {\n    headerTitleStyleSupported.fontWeight = titleFontWeight;\n  }\n\n  const headerLeftElement = headerLeft?.({\n    tintColor,\n    label: headerBackTitle,\n    canGoBack,\n  });\n  const headerRightElement = headerRight?.({ tintColor });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({ tintColor, children: titleText })\n      : null;\n\n  if (\n    Platform.OS === 'ios' &&\n    headerSearchBarOptions != null &&\n    SearchBar == null\n  ) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyleFlattened.backgroundColor ??\n        (headerTransparent ? 'transparent' : colors.card)\n      }\n      backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n      backTitleFontFamily={backTitleFontFamily}\n      backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n      blurEffect={headerBlurEffect}\n      color={tintColor}\n      direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      disableBackButtonMenu={headerBackButtonMenuEnabled === false}\n      hidden={headerShown === false}\n      hideBackButton={headerBackVisible === false}\n      hideShadow={headerShadowVisible === false}\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n      largeTitleColor={headerLargeTitleStyleFlattened.color}\n      largeTitleFontFamily={largeTitleFontFamily}\n      largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n      largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n      largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n      title={typeof headerTitle === 'string' ? headerTitle : titleText}\n      titleColor={titleColor}\n      titleFontFamily={titleFontFamily}\n      titleFontSize={titleFontSize}\n      titleFontWeight={titleFontWeight}\n      topInsetEnabled={insets.top !== 0}\n      translucent={\n        // This defaults to `true`, so we can't pass `undefined`\n        headerTransparent === true\n      }\n    >\n      {Platform.OS === 'ios' ? (\n        <>\n          {headerLeftElement != null ? (\n            <ScreenStackHeaderLeftView>\n              {headerLeftElement}\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleElement != null ? (\n            <ScreenStackHeaderCenterView>\n              {headerTitleElement}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      ) : (\n        <>\n          {headerLeftElement != null || typeof headerTitle === 'function' ? (\n            <ScreenStackHeaderLeftView>\n              <View style={styles.row}>\n                {headerLeftElement}\n                {headerTitleAlign !== 'center' ? (\n                  typeof headerTitle === 'function' ? (\n                    headerTitleElement\n                  ) : (\n                    <HeaderTitle\n                      tintColor={tintColor}\n                      style={headerTitleStyleSupported}\n                    >\n                      {titleText}\n                    </HeaderTitle>\n                  )\n                ) : null}\n              </View>\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleAlign === 'center' ? (\n            <ScreenStackHeaderCenterView>\n              {typeof headerTitle === 'function' ? (\n                headerTitleElement\n              ) : (\n                <HeaderTitle\n                  tintColor={tintColor}\n                  style={headerTitleStyleSupported}\n                >\n                  {titleText}\n                </HeaderTitle>\n              )}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      )}\n      {headerBackImageSource !== undefined ? (\n        <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n      ) : null}\n      {headerRightElement != null ? (\n        <ScreenStackHeaderRightView>\n          {headerRightElement}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {Platform.OS === 'ios' && headerSearchBarOptions != null ? (\n        <ScreenStackHeaderSearchBarView>\n          <SearchBar {...headerSearchBarOptions} />\n        </ScreenStackHeaderSearchBarView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n"]}