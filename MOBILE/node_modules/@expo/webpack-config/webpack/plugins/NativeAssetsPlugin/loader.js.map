{"version":3,"file":"loader.js","sourceRoot":"","sources":["../../../src/plugins/NativeAssetsPlugin/loader.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2021 Callstack, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Based on https://github.com/callstack/repack/blob/3c1e059/packages/repack/src/webpack/plugins/AssetsPlugin/assetsLoader.ts\n */\n\nimport crypto from 'crypto';\nimport type fs from 'fs';\nimport { imageSize } from 'image-size';\nimport { ISizeCalculationResult } from 'image-size/dist/types/interface';\nimport utils from 'loader-utils';\nimport path from 'path';\nimport { validate as validateSchema } from 'schema-utils';\nimport { promisify } from 'util';\n\nimport { escapeStringRegexp } from '../../utils/escapeStringRegexp';\nimport { CollectedScales, NativeAssetResolver } from './NativeAssetResolver';\n\ninterface Options {\n  platforms: string[];\n  assetExtensions: string[];\n  persist?: boolean;\n  publicPath?: string;\n}\n\nfunction getOptions(loaderContext: any): Options {\n  const options = utils.getOptions(loaderContext) || {};\n\n  validateSchema(\n    {\n      type: 'object',\n      required: ['platforms', 'assetExtensions'],\n      properties: {\n        platforms: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        assetExtensions: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        persist: { type: 'boolean' },\n        publicPath: { type: 'string' },\n      },\n    },\n    options,\n    { name: 'nativeAssetsLoader' }\n  );\n\n  return (options as unknown) as Options;\n}\n\nexport const raw = true;\n\nfunction getAndroidResourceFolder({\n  name,\n  contents,\n  scale,\n  scaleFilePath,\n}: {\n  name: string;\n  contents?: string;\n  scale: string;\n  scaleFilePath: string;\n}) {\n  const testXml = /\\.(xml)$/;\n  const testImages = /\\.(png|jpg|gif|webp)$/;\n  const testFonts = /\\.(ttf|otf|ttc)$/;\n\n  if (\n    // found font family\n    (testXml.test(name) && contents?.includes('font-family')) ||\n    // font extensions\n    testFonts.test(name)\n  ) {\n    return 'font';\n  } else if (testImages.test(name) || testXml.test(name)) {\n    // images extensions\n    switch (scale) {\n      case '@0.75x':\n        return 'drawable-ldpi';\n      case '@1x':\n        return 'drawable-mdpi';\n      case '@1.5x':\n        return 'drawable-hdpi';\n      case '@2x':\n        return 'drawable-xhdpi';\n      case '@3x':\n        return 'drawable-xxhdpi';\n      case '@4x':\n        return 'drawable-xxxhdpi';\n      default:\n        throw new Error(`Unknown scale ${scale} for ${scaleFilePath}`);\n    }\n  }\n\n  // everything else is going to RAW\n  return 'raw';\n}\n\nexport default async function nativeAssetsLoader(this: any) {\n  this.cacheable();\n\n  const callback = this.async();\n  const logger = this.getLogger('nativeAssetsLoader');\n  const rootContext = this.rootContext;\n\n  logger.debug('Processing:', this.resourcePath);\n\n  try {\n    const options = getOptions(this);\n    const pathSeparatorPattern = new RegExp(`\\\\${path.sep}`, 'g');\n    const resourcePath = this.resourcePath;\n    const dirname = path.dirname(resourcePath);\n    // Relative path to rootContext without any ../ due to https://github.com/callstack/haul/issues/474\n    // Assets from from outside of rootContext, should still be placed inside bundle output directory.\n    // Example:\n    //   resourcePath    = monorepo/node_modules/my-module/image.png\n    //   dirname         = monorepo/node_modules/my-module\n    //   rootContext     = monorepo/packages/my-app/\n    //   relativeDirname = ../../node_modules/my-module (original)\n    // So when we calculate destination for the asset for iOS ('assets' + relativeDirname + filename),\n    // it will end up outside of `assets` directory, so we have to make sure it's:\n    //   relativeDirname = node_modules/my-module (tweaked)\n    const relativeDirname = path\n      .relative(rootContext, dirname)\n      .replace(new RegExp(`^[\\\\.\\\\${path.sep}]+`), '');\n    const type = path.extname(resourcePath).replace(/^\\./, '');\n    const assetsPath = 'assets';\n    const suffix = `(@\\\\d+(\\\\.\\\\d+)?x)?(\\\\.(${options.platforms.join('|')}))?\\\\.${type}$`;\n    const filename = path.basename(resourcePath).replace(new RegExp(suffix), '');\n    // Name with embedded relative dirname eg `node_modules_reactnative_libraries_newappscreen_components_logo.png`\n    const normalizedName = `${(relativeDirname.length === 0\n      ? filename\n      : `${relativeDirname.replace(pathSeparatorPattern, '_')}_${filename}`\n    )\n      .toLowerCase()\n      .replace(/[^a-z0-9_]/g, '')}.${type}`;\n\n    const files = await new Promise<string[]>((resolve, reject) =>\n      this.fs.readdir(dirname, (error: Error | null, results: any[]) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(\n            (results as any[] | undefined)?.filter(result => typeof result === 'string') ?? []\n          );\n        }\n      })\n    );\n\n    const scales = NativeAssetResolver.collectScales(files, {\n      name: filename,\n      type,\n      assetExtensions: options.assetExtensions,\n      platforms: options.platforms,\n    });\n\n    const scaleKeys = Object.keys(scales).sort(\n      (a, b) => parseInt(a.replace(/[^\\d.]/g, ''), 10) - parseInt(b.replace(/[^\\d.]/g, ''), 10)\n    );\n    const readFileAsync = promisify(this.fs.readFile.bind(this.fs) as typeof fs.readFile);\n\n    const resolveAssetOutput = (results: any, scale: string, scaleFilePath: string) => {\n      if (options.persist && options.platforms.includes('android')) {\n        const destination = getAndroidResourceFolder({\n          name: normalizedName,\n          scale,\n          scaleFilePath,\n          contents: results,\n        });\n        return path.join(destination, normalizedName);\n      }\n\n      const name = `${filename}${scale === '@1x' ? '' : scale}.${type}`;\n      return path.join(assetsPath, relativeDirname, name);\n    };\n\n    const resolveScaleAsync = async (\n      scale: string\n    ): Promise<{\n      destination: string;\n      content: string | Buffer | undefined;\n    }> => {\n      const scaleFilePath = path.join(dirname, scales[scale].name);\n      this.addDependency(scaleFilePath);\n      const results = await readFileAsync(scaleFilePath);\n      return {\n        content: results,\n        destination: resolveAssetOutput(results, scale, scaleFilePath),\n      };\n    };\n\n    const assets = await Promise.all(scaleKeys.map(resolveScaleAsync));\n\n    assets.forEach(asset => {\n      const { destination, content } = asset;\n\n      logger.debug('Asset emitted:', destination);\n      // Assets are emitted relatively to `output.path`.\n      this.emitFile(destination, content ?? '');\n    });\n\n    let publicPath = path.join(assetsPath, relativeDirname).replace(pathSeparatorPattern, '/');\n\n    if (options.publicPath) {\n      publicPath = path.join(options.publicPath, publicPath);\n    }\n\n    const hashes = assets.map(asset =>\n      crypto\n        .createHash('md5')\n        .update(asset.content?.toString() ?? asset.destination, 'utf8')\n        .digest('hex')\n    );\n\n    let info: ISizeCalculationResult | undefined;\n\n    try {\n      info = imageSize(this.resourcePath);\n\n      const match = path\n        .basename(this.resourcePath)\n        .match(new RegExp(`^${escapeStringRegexp(filename)}${suffix}`));\n\n      if (match?.[1]) {\n        const scale = Number(match[1].replace(/[^\\d.]/g, ''));\n\n        if (typeof scale === 'number' && Number.isFinite(scale)) {\n          info.width && (info.width /= scale);\n          info.height && (info.height /= scale);\n        }\n      }\n    } catch {\n      // Asset is not an image\n    }\n\n    logger.debug('Asset processed:', {\n      resourcePath,\n      platforms: options.platforms,\n      rootContext,\n      relativeDirname,\n      type,\n      assetsPath,\n      filename,\n      normalizedName,\n      scales,\n      assets: assets.map(asset => asset.destination),\n      publicPath,\n      width: info?.width,\n      height: info?.height,\n    });\n\n    callback?.(\n      null,\n      createAssetCodeBlock({\n        persist: !!options.persist,\n        scales,\n        filename,\n        type,\n        hashes,\n        httpServerLocation: publicPath,\n        fileSystemLocation: dirname,\n        ...(info || {}),\n      })\n    );\n  } catch (error) {\n    callback?.(error);\n  }\n}\n\nfunction createAssetCodeBlock({\n  persist,\n  scales,\n  filename,\n  type,\n  hashes,\n  httpServerLocation,\n  height,\n  width,\n  fileSystemLocation,\n}: {\n  persist: boolean;\n  scales: CollectedScales;\n  filename: string;\n  type: string;\n  hashes: string[];\n  httpServerLocation: string;\n  height?: number;\n  width?: number;\n  fileSystemLocation: string;\n}) {\n  return [\n    `var AssetRegistry = require('react-native/Libraries/Image/AssetRegistry');`,\n    `module.exports = AssetRegistry.registerAsset({`,\n    `  __packager_asset: true,`,\n    `  scales: ${JSON.stringify(scales)},`,\n    `  name: ${JSON.stringify(filename)},`,\n    `  type: ${JSON.stringify(type)},`,\n    `  hash: ${JSON.stringify(hashes.join())},`,\n    `  httpServerLocation: ${JSON.stringify(httpServerLocation)},`,\n    `  ${persist ? '' : `fileSystemLocation: ${JSON.stringify(fileSystemLocation)},`}`,\n    `  ${height != null ? `height: ${height},` : ''}`,\n    `  ${width != null ? `width: ${width},` : ''}`,\n    `});`,\n  ].join('\\n');\n}\n"]}